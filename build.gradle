plugins {
	id 'java'
//	id 'com.github.johnrengelman.shadow' version '6.1.0'
}

//shadowJar {
//	from sourceSets.test.output
//	configurations = [project.configurations.testRuntimeClasspath]
//	manifest {
//		attributes 'Main-Class': 'com.adamk33n3r.runelite.watchdog.WatchdogPluginLauncher'
//	}
//}

repositories {
	mavenLocal()
	maven {
		url = 'https://repo.runelite.net'
	}
	mavenCentral()
}

def runeLiteVersion = 'latest.release'

dependencies {
	compileOnly group: 'net.runelite', name:'client', version: runeLiteVersion

	implementation files('libs/jaco-mp3-player-0.9.5.jar')
	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'

	testImplementation 'junit:junit:4.12'
	testImplementation group: 'net.runelite', name:'client', version: runeLiteVersion
	testImplementation group: 'net.runelite', name:'jshell', version: runeLiteVersion
}

def versionProps = new Properties()
def versionPropsFile = file('version.properties')
if (versionPropsFile.exists())
	versionProps.load(versionPropsFile.newReader())

def major = (versionProps['VERSION_MAJOR'] as String ?: '0').toInteger()
def minor = (versionProps['VERSION_MINOR'] as String ?: '0').toInteger()
def patch = (versionProps['VERSION_PATCH'] as String ?: '0').toInteger()
def build = (versionProps['VERSION_BUILD'] as String ?: '0').toInteger() + 1
def phase = (versionProps['VERSION_PHASE'] as String ?: '')
versionProps['VERSION_MAJOR'] = major.toString()
versionProps['VERSION_MINOR'] = minor.toString()
versionProps['VERSION_PATCH'] = patch.toString()
versionProps['VERSION_BUILD'] = build.toString()
versionProps['VERSION_PHASE'] = phase
versionProps.store(versionPropsFile.newWriter(), null)

group = 'com.adamk33n3r.runelite.watchdog'
version = major+'.'+minor+'.'+patch+'.'+build
if (!phase.empty)
	version = version+'-'+phase
sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}
